services:
  kong-database:
    image: postgres:13
    container_name: kong-database
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kongpass
      POSTGRES_DB: kong
    networks:
      - kong-net
    volumes:
      - kong-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migrations:
    image: kong/kong-gateway:3.10.0.2
    container_name: kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: test
      KONG_PORTAL: "off"
      KONG_VITALS: "off"
      KONG_LICENSE_DATA: ""
    networks:
      - kong-net
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure

  kong:
    image: kong/kong-gateway:3.10.0.2
    container_name: kong-gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: test
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PORTAL: "off"
      KONG_VITALS: "off"
      KONG_LICENSE_DATA: ""
    networks:
      - kong-net
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
      - "8002:8002"
    depends_on:
      kong-migrations:
        condition: service_completed_successfully
      kong-database:
        condition: service_healthy
    restart: always

networks:
  kong-net:
    name: kong-net

volumes:
  kong-data: